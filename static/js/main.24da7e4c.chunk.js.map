{"version":3,"sources":["types/Filter.ts","State/State.tsx","components/TodoItem/TodoItem.tsx","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","servises/todos.ts","index.tsx"],"names":["Filter","initialState","filterBy","all","query","appliedQuery","reducer","state","action","type","payload","selectedTodo","StateContext","React","createContext","DispatchContext","GlobalProvider","children","useReducer","dispatch","Provider","value","TodoItem","todo","useContext","title","id","completed","className","onClick","TodoList","todos","map","TodoFilter","applyQuery","debounce","event","target","trim","onChange","placeholder","handleQuery","length","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","getUser","userId","TodoModal","useState","loading","setLoading","user","setUser","useEffect","finally","href","name","App","setTodos","filteredTodos","filter","active","toLowerCase","includes","getPreperedTodos","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.24da7e4c.chunk.js","sourcesContent":["export enum Filter {\n  all = 'all',\n  active = 'active',\n  completed = 'completed',\n}\n","import React, { useReducer } from 'react';\nimport { Filter } from '../types/Filter';\nimport { Todo } from '../types/Todo';\n\ntype State = {\n  filterBy: Filter;\n  query: string;\n  appliedQuery: string;\n  selectedTodo?: Todo | null;\n};\n\nexport type Action\n  = { type: 'setFilter', payload: Filter }\n  | { type: 'query', payload: string }\n  | { type: 'appliedQuery', payload: string }\n  | { type: 'getSelectedTodo', payload: Todo | null };\n\ntype Props = {\n  children: React.ReactNode;\n};\n\nconst initialState: State = {\n  filterBy: Filter.all,\n  query: '',\n  appliedQuery: '',\n};\n\nfunction reducer(state: State, action: Action) {\n  switch (action.type) {\n    case 'setFilter':\n      return {\n        ...state,\n        filterBy: action.payload,\n      };\n\n    case 'query':\n      return {\n        ...state,\n        query: action.payload,\n      };\n\n    case 'appliedQuery':\n      return {\n        ...state,\n        appliedQuery: action.payload,\n      };\n\n    case 'getSelectedTodo':\n      return {\n        ...state,\n        selectedTodo: action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport const StateContext = React.createContext(initialState);\nexport const DispatchContext\n  = React.createContext((() => { }) as React.Dispatch<Action>);\n\nexport const GlobalProvider: React.FC<Props> = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  return (\n    <StateContext.Provider value={state}>\n      <DispatchContext.Provider value={dispatch}>\n        {children}\n      </DispatchContext.Provider>\n    </StateContext.Provider>\n  );\n};\n","import { useContext } from 'react';\nimport { Todo } from '../../types/Todo';\nimport { DispatchContext, StateContext } from '../../State/State';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoItem: React.FC<Props> = ({ todo }) => {\n  const dispatch = useContext(DispatchContext);\n  const { selectedTodo } = useContext(StateContext);\n  const { title, id, completed } = todo;\n\n  return (\n    <tr data-cy=\"todo\" className=\"\">\n      <td className=\"is-vcentered\">{id}</td>\n\n      <td className=\"is-vcentered\">\n        {completed && (\n          <span className=\"icon\" data-cy=\"iconCompleted\">\n            <i className=\"fas fa-check\" />\n          </span>\n        )}\n      </td>\n\n      <td className=\"is-vcentered is-expanded\">\n        <p\n          className={completed ? 'has-text-success' : 'has-text-danger'}\n        >\n          {title}\n        </p>\n      </td>\n      <td className=\"has-text-right is-vcentered\">\n        <button\n          data-cy=\"selectButton\"\n          className=\"button\"\n          type=\"button\"\n          onClick={() => dispatch({ type: 'getSelectedTodo', payload: todo })}\n        >\n          <span className=\"icon\">\n            {selectedTodo\n              ? (<i className=\"far fa-eye-slash\" />)\n              : (<i className=\"far fa-eye\" />)}\n          </span>\n        </button>\n      </td>\n    </tr>\n  );\n};\n","import React from 'react';\nimport { TodoItem } from '../TodoItem';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => (<TodoItem todo={todo} key={todo.id} />))}\n      </tbody>\n    </table>\n  );\n};\n","import {\n  ChangeEvent,\n  useContext,\n} from 'react';\nimport debounce from 'lodash.debounce';\nimport { DispatchContext, StateContext } from '../../State/State';\nimport { Filter } from '../../types/Filter';\n\nexport const TodoFilter = () => {\n  const dispatch = useContext(DispatchContext);\n  const { query } = useContext(StateContext);\n\n  const applyQuery = debounce((event: ChangeEvent<HTMLInputElement>) => {\n    dispatch({ type: 'appliedQuery', payload: event.target.value.trim() });\n  }, 1000);\n\n  const deleteQuery = () => {\n    dispatch({ type: 'query', payload: '' });\n    dispatch({ type: 'appliedQuery', payload: '' });\n  };\n\n  const handleQuery = (event: ChangeEvent<HTMLInputElement>) => {\n    dispatch({ type: 'query', payload: event?.target.value.trim() });\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={(event) => {\n              dispatch({\n                type: 'setFilter',\n                payload: event.target.value as Filter,\n              });\n            }}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={event => {\n            applyQuery(event);\n            handleQuery(event);\n          }}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {!!query.length && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={deleteQuery}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useContext, useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\nimport { DispatchContext } from '../../State/State';\n\ntype Props = {\n  selectedTodo: Todo;\n};\n\nexport const TodoModal: React.FC<Props> = ({ selectedTodo }) => {\n  const [loading, setLoading] = useState(false);\n  const [user, setUser] = useState<User | null>(null);\n  const dispatch = useContext(DispatchContext);\n\n  const {\n    id, title, userId, completed,\n  } = selectedTodo;\n\n  useEffect(() => {\n    setLoading(true);\n    getUser(userId)\n      .then(setUser)\n      .finally(() => setLoading(false));\n  }, [userId]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {loading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => dispatch({\n                type: 'getSelectedTodo', payload: null,\n              })}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {completed\n                ? (<strong className=\"has-text-success\">Done</strong>)\n                : (<strong className=\"has-text-danger\">Planned</strong>)}\n\n              {' by '}\n\n              <a href=\"mailto:Sincere@april.biz\">\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useContext, useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\nimport { StateContext } from './State/State';\nimport { getPreperedTodos } from './servises/todos';\n\nexport const App: React.FC = () => {\n  const [loading, setLoading] = useState(false);\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const { filterBy, appliedQuery, selectedTodo } = useContext(StateContext);\n\n  const filteredTodos = getPreperedTodos(todos, { filterBy, appliedQuery });\n\n  useEffect(() => {\n    setLoading(true);\n    getTodos().then(setTodos).finally(() => setLoading(false));\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter />\n            </div>\n\n            <div className=\"block\">\n              {loading && <Loader />}\n\n              <TodoList todos={filteredTodos} />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && <TodoModal selectedTodo={selectedTodo} />}\n\n    </>\n  );\n};\n","import { Action } from '../State/State';\nimport { getUser } from '../api';\nimport { ControlParams } from '../types/ControlParams';\nimport { Filter } from '../types/Filter';\nimport { Todo } from '../types/Todo';\nimport { User } from '../types/User';\n\nexport function getPreperedTodos(\n  todos: Todo[],\n  { appliedQuery, filterBy }: ControlParams,\n): Todo[] {\n  const preperedTodos = todos.filter(todo => {\n    switch (filterBy) {\n      case Filter.active:\n        return !todo.completed;\n      case Filter.completed:\n        return todo.completed;\n      default:\n        return true;\n    }\n  });\n\n  return preperedTodos.filter(todo => {\n    return todo.title.toLowerCase().includes(appliedQuery.toLowerCase());\n  });\n}\n\nexport function getSelectedTodo(\n  userId: number,\n  selectedTodo: Todo,\n  dispatch: React.Dispatch<Action>,\n) {\n  let selectedUser: User | null = null;\n\n  getUser(userId).then(user => {\n    selectedUser = user;\n  });\n\n  dispatch({\n    type: 'getSelectedTodo',\n    payload: { ...selectedTodo, user: selectedUser },\n  });\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\nimport { GlobalProvider } from './State/State';\n\nReactDOM.render(\n  <GlobalProvider>\n    <App />\n  </GlobalProvider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}